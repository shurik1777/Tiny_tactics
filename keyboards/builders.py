# keyboards/builders.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def create_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞—Ç–∞–∫—É—é—â–µ–≥–æ", callback_data="setup_attacker")],
        [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞—â–∏—â–∞—é—â–µ–≥–æ—Å—è", callback_data="setup_defender")],
        [InlineKeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", callback_data="calculate_result")],
    ])
    return keyboard


def create_skill_selection_keyboard(skill_name):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–∏–ª–ª–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for i in range(1, 101):  # –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π –æ—Ç 1 –¥–æ 100
        if i % 10 == 1:  # –ù–æ–≤—ã–π —Ä—è–¥ –∫–∞–∂–¥—ã–µ 10 –∑–Ω–∞—á–µ–Ω–∏–π
            keyboard.inline_keyboard.append([])
        keyboard.inline_keyboard[-1].append(InlineKeyboardButton(
            text=str(i), callback_data=f"set_skill_{skill_name}_{i}"
        ))
    return keyboard


def create_achievement_selection_keyboard(achievements, selected_achievements):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞—á–∏–≤–æ–∫."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for achievement in achievements:
        checkbox = "‚úÖ" if achievement in selected_achievements else "üî≤"
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{checkbox} {achievement}", callback_data=f"toggle_achievement_{achievement}"
            )
        ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä –∞—á–∏–≤–æ–∫", callback_data="finish_achievements")
    ])
    return keyboard


def create_tactic_selection_keyboard(tactics, selected_tactics):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∞–∫—Ç–∏–∫–∏."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for tactic in tactics:
        checkbox = "‚úÖ" if tactic in selected_tactics else "üî≤"
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{checkbox} {tactic}", callback_data=f"toggle_tactic_{tactic}"
            )
        ])
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä —Ç–∞–∫—Ç–∏–∫–∏", callback_data="finish_tactics")
    ])
    return keyboard


def create_confirm_keyboard(confirm_callback, cancel_callback):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=confirm_callback)],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)]
    ])
    return keyboard
